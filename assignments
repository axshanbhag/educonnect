<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Assignments - EduConnect</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background: linear-gradient(to right, #f4f4f4, #e0e0e0);
            color: #333;
        }
        .nav-bar {
            display: flex;
            justify-content: center;
            background: #fff;
            border-bottom: 1px solid #ddd;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .nav-bar a {
            display: block;
            padding: 15px 20px;
            text-decoration: none;
            color: #333;
            font-weight: bold;
            transition: color 0.3s, background 0.3s;
        }
        .nav-bar a:hover {
            color: #fff;
            background: #ff6f61;
        }
        .header {
            background: #ff6f61;
            color: #fff;
            padding: 20px;
            text-align: center;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            border-bottom: 3px solid #ff3d2e;
            position: relative;
        }
        .header h1 {
            margin: 0;
            font-size: 2.5em;
            font-weight: bold;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.2);
        }
        .container {
            display: flex;
            flex-direction: column;
            width: 100%;
            max-width: 1200px;
            margin: auto;
            padding: 20px;
            box-sizing: border-box;
            background: #fff;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .sidebar {
            width: 250px;
            background: #fff;
            border-right: 1px solid #ddd;
            padding: 20px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }
        .sidebar:hover {
            transform: translateX(-5px);
            box-shadow: 0 8px 12px rgba(0, 0, 0, 0.2);
        }
        .sidebar h2 {
            margin-top: 0;
            color: #ff6f61;
        }
        .sidebar ul {
            list-style: none;
            padding: 0;
        }
        .sidebar ul li {
            margin-bottom: 10px;
        }
        .sidebar ul li a {
            color: #333;
            text-decoration: none;
            font-weight: bold;
            transition: color 0.3s;
        }
        .sidebar ul li a:hover {
            color: #ff6f61;
        }
        .content {
            flex: 1;
            padding: 20px;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            font-weight: bold;
            margin-bottom: 5px;
        }
        .form-group input, .form-group textarea, .form-group select {
            width: 100%;
            padding: 10px;
            border-radius: 5px;
            border: 1px solid #ddd;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            outline: none;
        }
        .form-group textarea {
            resize: vertical;
        }
        .form-group button {
            background: #ff6f61;
            color: #fff;
            border: none;
            border-radius: 5px;
            padding: 10px 20px;
            cursor: pointer;
            transition: background 0.3s;
        }
        .form-group button:hover {
            background: #ff3d2e;
        }
        .assignment-list {
            margin-top: 20px;
        }
        .assignment-list h2 {
            font-size: 1.5em;
            margin-bottom: 10px;
        }
        .assignment {
            background: #f9f9f9;
            border: 1px solid #ddd;
            border-radius: 5px;
            padding: 15px;
            margin-bottom: 15px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .assignment h3 {
            margin: 0;
            font-size: 1.2em;
        }
        .assignment p {
            margin: 5px 0;
        }
        .footer {
            background: #333;
            color: #fff;
            text-align: center;
            padding: 15px;
            position: fixed;
            bottom: 0;
            width: 100%;
            box-shadow: 0 -4px 6px rgba(0, 0, 0, 0.1);
        }
        .footer p {
            margin: 0;
            font-size: 0.9em;
        }
        .footer a {
            color: #ff6f61;
            text-decoration: none;
            font-weight: bold;
        }
        .footer a:hover {
            text-decoration: underline;
        }
        @media (max-width: 768px) {
            .nav-bar {
                flex-direction: column;
                align-items: center;
            }
            .nav-bar a {
                padding: 10px;
            }
            .header h1 {
                font-size: 2em;
            }
            .header input[type="text"] {
                width: 100%;
            }
            .content {
                padding: 10px;
            }
            .post, .notification, .message {
                padding: 10px;
            }
        }
        @media (max-width: 480px) {
            .header h1 {
                font-size: 1.5em;
            }
            .nav-bar a {
                font-size: 0.9em;
            }
            .post .user-info img {
                width: 40px;
                height: 40px;
                margin-right: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="header">
        <h1>EduConnect - Post Assignments</h1>
    </div>
    <div class="nav-bar">
        <a href="point.html">Points</a>
        <a href="profile.html">Profile</a>
        <a href="notification.html">Notifications</a>
        <a href="message.html">Messages</a>
        <a href="setting.html">Settings</a>
        <a href="post.html">Post a Video</a>
        <a href="assignments.html">Post Assignments</a>
        <a href="classes.html">Classes</a>
        <a href="dashboard.html">Dashboard</a>
    </div>
    <div class="container">
        <div class="content">
            <h2>Post New Assignment</h2>
            <form id="assignment-form">
                <div class="form-group">
                    <label for="video-select">Select Video</label>
                    <select id="video-select" name="videoId" required>
                        <!-- Options will be populated dynamically -->
                    </select>
                </div>
                <div class="form-group">
                    <label for="assignment-title">Title</label>
                    <input type="text" id="assignment-title" name="title" required>
                </div>
                <div class="form-group">
                    <label for="assignment-description">Description</label>
                    <textarea id="assignment-description" name="description" rows="4" required></textarea>
                </div>
                <div class="form-group">
                    <label for="due-date">Due Date</label>
                    <input type="date" id="due-date" name="dueDate" required>
                </div>
                <div class="form-group">
                    <button type="submit">Post Assignment</button>
                </div>
            </form>

            <div class="assignment-list">
                <h2>Existing Assignments</h2>
                <!-- Existing assignments will be listed here -->
            </div>
        </div>
    </div>
    <script>
        // Function to fetch and populate video options
        function loadVideos() {
            fetch('https://your-backend-api.com/videos') // Replace with your API endpoint
                .then(response => response.json())
                .then(data => {
                    if (data.videos && Array.isArray(data.videos)) {
                        const videoSelect = document.getElementById('video-select');
                        videoSelect.innerHTML = '<option value="">Select a Video</option>';
                        data.videos.forEach(video => {
                            const option = document.createElement('option');
                            option.value = video.id;
                            option.textContent = video.title;
                            videoSelect.appendChild(option);
                        });
                    } else {
                        console.error('Invalid data format:', data);
                    }
                })
                .catch(error => console.error('Error loading videos:', error));
        }

        // Call loadVideos on page load
        document.addEventListener('DOMContentLoaded', loadVideos);

        // Handle form submission
        document.getElementById('assignment-form').addEventListener('submit', function(event) {
            event.preventDefault();

            const formData = new FormData(this);

            fetch('https://your-backend-api.com/assignments', { // Update with your API endpoint
                method: 'POST',
                body: JSON.stringify({
                    videoId: formData.get('videoId'),
                    title: formData.get('title'),
                    description: formData.get('description'),
                    dueDate: formData.get('dueDate')
                }),
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Assignment posted successfully.');
                    // Reload or update assignments list
                } else {
                    alert('Failed to post assignment: ' + (data.message || 'An unknown error occurred.'));
                }
            })
            .catch(error => console.error('Error:', error));
        });
    </script>
    <script>
/* document.addEventListener('DOMContentLoaded', function() {
            const role = localStorage.getItem('role');

            if (role !== 'teacher') {
                // Redirect to an error page or another page
                window.location.href = 'access.html'; // or any other page
            }
        });*/
    </script>
</body>
</html>
